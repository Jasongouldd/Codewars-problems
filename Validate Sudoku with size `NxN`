Given a Sudoku data structure with size NxN, N > 0 and âˆšN == integer, write a method to validate if it has been filled out correctly.

The data structure is a multi-dimensional Array, i.e:

Solution:

from itertools import chain

class Sudoku(object):
    def __init__(self, data):
        self.data = data
        self.rows = len(data) 
        self.cols = len(data[0])
        self.nums = [num for num in range(1, self.rows + 1)]
        
    def is_valid(self):
        if self.rows != self.cols:
            return False
        else:
            for r in range(self.rows):
                check = []
                for c in range(self.cols):
                    num = self.data[r][c]
                    if num in self.nums and num not in check:
                        check.append(num)
                    else:
                        return False
        
            return self.all_ints() and self.squares()
                    
    def all_ints(self):
        return all(
            isinstance(x, int) and not isinstance(x, bool)
            for row in self.data for x in row
        )
    
    def squares(self):
        sq = int(self.rows ** 0.5)
        return all(
            set(chain.from_iterable(row[j:j+sq] for row in self.data[i:i+sq])) == self.nums
            for i in range(0, self.rows, sq)
            for j in range(0, self.rows, sq)
        )
    
